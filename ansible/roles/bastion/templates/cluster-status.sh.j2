#!/bin/bash
# Cluster status monitoring script
# Generated by Ansible for {{ cluster_name }}

CLUSTER_NAME="{{ cluster_name }}"
REGION="{{ region }}"

echo "================================================"
echo "📊 Atlas Micro Platform - Cluster Status"
echo "================================================"
echo "Cluster: $CLUSTER_NAME"
echo "Region: $REGION"
echo "Time: $(date)"
echo ""

# Check if kubectl is configured
if ! kubectl version --client >/dev/null 2>&1; then
    echo "❌ kubectl is not installed or not in PATH"
    exit 1
fi

if ! kubectl cluster-info >/dev/null 2>&1; then
    echo "❌ Cannot connect to cluster"
    echo "Run ./configure-kubectl.sh to set up cluster access"
    exit 1
fi

echo "🔍 Cluster Overview"
echo "==================="

# Cluster info
echo "Cluster endpoint:"
kubectl config view --minify --output jsonpath='{.clusters[0].cluster.server}' 2>/dev/null || echo "Not available"
echo ""

# Node status
echo "📱 Node Status:"
kubectl get nodes --no-headers 2>/dev/null | wc -l | xargs echo "Total nodes:"
kubectl get nodes --no-headers 2>/dev/null | grep -c " Ready " | xargs echo "Ready nodes:"
kubectl get nodes 2>/dev/null || echo "Unable to get node information"
echo ""

# Namespace overview
echo "📁 Namespace Overview:"
kubectl get namespaces --no-headers 2>/dev/null | wc -l | xargs echo "Total namespaces:"
echo ""

# Pod status by namespace
echo "🏃 Pod Status by Namespace:"
echo "Namespace | Running | Pending | Failed | Succeeded"
echo "----------|---------|---------|--------|-----------"
for ns in $(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}' 2>/dev/null); do
    running=$(kubectl get pods -n $ns --no-headers 2>/dev/null | grep -c " Running " || echo "0")
    pending=$(kubectl get pods -n $ns --no-headers 2>/dev/null | grep -c " Pending " || echo "0")
    failed=$(kubectl get pods -n $ns --no-headers 2>/dev/null | grep -c " Failed " || echo "0")
    succeeded=$(kubectl get pods -n $ns --no-headers 2>/dev/null | grep -c " Succeeded " || echo "0")
    printf "%-9s | %-7s | %-7s | %-6s | %-9s\n" "$ns" "$running" "$pending" "$failed" "$succeeded"
done
echo ""

# Service overview
echo "🌐 Services:"
kubectl get services --all-namespaces --no-headers 2>/dev/null | wc -l | xargs echo "Total services:"
echo ""

# Ingress overview
echo "🚪 Ingress Controllers:"
kubectl get ingress --all-namespaces 2>/dev/null | tail -n +2 | wc -l | xargs echo "Total ingress resources:"
echo ""

# Helm releases
echo "📦 Helm Releases:"
if command -v helm >/dev/null 2>&1; then
    helm list --all-namespaces 2>/dev/null | tail -n +2 | wc -l | xargs echo "Total helm releases:"
    echo ""
    echo "Release details:"
    helm list --all-namespaces 2>/dev/null || echo "No helm releases found"
else
    echo "Helm not available"
fi
echo ""

# Resource usage
echo "💾 Resource Usage:"
if kubectl top nodes >/dev/null 2>&1; then
    kubectl top nodes 2>/dev/null
else
    echo "Metrics server not available"
fi
echo ""

# Recent events
echo "⚡ Recent Events (last 10):"
kubectl get events --sort-by='.lastTimestamp' --all-namespaces 2>/dev/null | tail -10 || echo "Unable to get events"
echo ""

# Storage
echo "💿 Storage Classes:"
kubectl get storageclass 2>/dev/null || echo "Unable to get storage classes"
echo ""

# PersistentVolumes
echo "📀 Persistent Volumes:"
kubectl get pv 2>/dev/null | wc -l | xargs echo "Total PVs:"
kubectl get pvc --all-namespaces 2>/dev/null | tail -n +2 | wc -l | xargs echo "Total PVCs:"
echo ""

echo "================================================"
echo "✅ Status check complete"
echo "================================================"
echo ""
echo "Useful commands:"
echo "  kubectl get pods --all-namespaces"
echo "  kubectl describe node [node-name]"
echo "  kubectl logs -f [pod-name] -n [namespace]"
echo "  helm list --all-namespaces"
echo "  kubectl get events --sort-by='.lastTimestamp'"
echo ""
