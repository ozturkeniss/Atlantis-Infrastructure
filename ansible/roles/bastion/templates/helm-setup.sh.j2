#!/bin/bash
# Helm repository setup script
# Generated by Ansible for {{ cluster_name }}

set -e

echo "================================================"
echo "üì¶ Setting up Helm repositories"
echo "================================================"
echo "Cluster: {{ cluster_name }}"
echo "Environment: {{ environment }}"
echo ""

# Check if helm is available
if ! command -v helm >/dev/null 2>&1; then
    echo "‚ùå Helm is not installed or not in PATH"
    exit 1
fi

echo "‚úÖ Helm version:"
helm version
echo ""

echo "üîß Adding essential Helm repositories..."

# Add essential repositories
repositories=(
    "eks https://aws.github.io/eks-charts"
    "external-dns https://kubernetes-sigs.github.io/external-dns/"
    "prometheus-community https://prometheus-community.github.io/helm-charts"
    "grafana https://grafana.github.io/helm-charts"
    "argo https://argoproj.github.io/argo-helm"
    "ingress-nginx https://kubernetes.github.io/ingress-nginx"
    "autoscaler https://kubernetes.github.io/autoscaler"
    "jetstack https://charts.jetstack.io"
    "bitnami https://charts.bitnami.com/bitnami"
    "stable https://charts.helm.sh/stable"
)

for repo in "${repositories[@]}"; do
    name=$(echo $repo | cut -d' ' -f1)
    url=$(echo $repo | cut -d' ' -f2)
    
    echo "Adding repository: $name"
    if helm repo add $name $url 2>/dev/null; then
        echo "‚úÖ Added $name"
    else
        echo "‚ö†Ô∏è  Repository $name may already exist"
    fi
done

echo ""
echo "üîÑ Updating repository cache..."
helm repo update

echo ""
echo "üìã Available repositories:"
helm repo list

echo ""
echo "================================================"
echo "‚úÖ Helm setup complete!"
echo "================================================"
echo ""
echo "Common charts you might want to install:"
echo ""
echo "AWS Load Balancer Controller:"
echo "  helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\"
echo "    --set clusterName={{ cluster_name }} \\"
echo "    --set serviceAccount.create=false \\"
echo "    --set serviceAccount.name=aws-load-balancer-controller \\"
echo "    -n kube-system"
echo ""
echo "Prometheus Monitoring Stack:"
echo "  helm install prometheus prometheus-community/kube-prometheus-stack \\"
echo "    --create-namespace \\"
echo "    --namespace monitoring"
echo ""
echo "ArgoCD:"
echo "  helm install argocd argo/argo-cd \\"
echo "    --create-namespace \\"
echo "    --namespace argocd"
echo ""
echo "Grafana:"
echo "  helm install grafana grafana/grafana \\"
echo "    --create-namespace \\"
echo "    --namespace monitoring"
echo ""
echo "Cert-Manager:"
echo "  helm install cert-manager jetstack/cert-manager \\"
echo "    --namespace cert-manager \\"
echo "    --create-namespace \\"
echo "    --set installCRDs=true"
echo ""
echo "NGINX Ingress Controller:"
echo "  helm install ingress-nginx ingress-nginx/ingress-nginx \\"
echo "    --create-namespace \\"
echo "    --namespace ingress-nginx"
echo ""
echo "External DNS:"
echo "  helm install external-dns external-dns/external-dns \\"
echo "    --set provider=aws \\"
echo "    --set aws.region={{ region }} \\"
echo "    --namespace kube-system"
echo ""
echo "Useful Helm commands:"
echo "  helm search repo [keyword]    # Search for charts"
echo "  helm show chart [chart]       # Show chart information"
echo "  helm show values [chart]      # Show default values"
echo "  helm list --all-namespaces    # List installed releases"
echo "  helm status [release]         # Check release status"
echo "  helm upgrade [release] [chart] # Upgrade a release"
echo "  helm rollback [release] [revision] # Rollback a release"
echo ""
